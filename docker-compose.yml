services:
  postgres:
    image: postgres
    container_name: postgres
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin1234
      - POSTGRES_DB=AuctionDb
    ports:
      - 5432:5432
    volumes:
      - postgres_data:/var/lib/postgresql/data/

  pgadmin:
    image: dpage/pgadmin4
    container_name: postgresviewer
    depends_on:
      - postgres
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@carsties.com
      - PGADMIN_DEFAULT_PASSWORD=admin1234
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/root/.pgadmin
  
  mongodb:
    image: mongo
    container_name: mongodb
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=Passw0rd
    ports:
      - 27017:27017
    volumes:
      - mongodata:/var/lib/mongodb/data

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    ports:
      - 5672:5672
      - 15672:15672
  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    ports:
      - 7000:8000
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.2
    container_name: 'elasticsearch'
    ports:
    - 9200:9200
    volumes:
    - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
    - xpack.monitoring.enabled=true
    - xpack.watcher.enabled=false
    - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    - discovery.type=single-node

  kibana:
    image: docker.elastic.co/kibana/kibana:7.9.2
    container_name: kibana
    ports:
    - 5601:5601
    depends_on:
    - elasticsearch
    environment:
    - ELASTICSEARCH_URL=http://elasticsearch:9200


  auctionSvc:
    container_name: Carsties.AuctionService
    image: trycatchlearn/auction-svc:latest
    build: 
      context: .
      dockerfile: src/AuctionService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLs=http://+80
      - ASPNETCORE_URLs=http://+7777
      - Logging__IncludeScopes=false
      - "Logging__LogOutputTemplate=[{Timestamp:dd-MM-yyyy HH:mm:ss, fff}] {Level} {Properties} [CorrelationId:{CorrelationId}] [Machine: {MachineName}] {CallerType}:{MemberName} {Message}{NewLine}{Exception}"
      - Logging__Console__Enabled=true
      - Logging__Console__LogLevel=Debug
      - Logging__Elastic__Enabled=true
      - Logging__Elastic__LogLevel=Debug
      - AppConfigurations__ApplicationIdentifier=Carsties.AuctionService
      - AppConfigurations__ApplicationEnvironment=Docker
      - Elasticsearch__Uri=http://elasticsearch:9200
      - IdentityGroupAccess__Authority=http://identitySvc
      - IdentityGroupAccess__Audience=http://identitySvc/resources
      - RabbitMq__Host=rabbitmq
      - RabbitMq__Username=guest
      - RabbitMq__Password=guest
      - ConnectionStrings__CarstiesConnection=Server=postgres:5432;Database=AuctionDb;User Id=admin;Password=admin1234;
      - Kestrel__Endpoints__Grpc__Protocols=Http2
      - Kestrel__Endpoints__Grpc__Url=http://+:7777
      - Kestrel__Endpoints__WebApi__Protocols=Http1
      - Kestrel__Endpoints__WebApi__Url=http://+:80
    ports:
      - 4001:80
      - 7777:7777
    depends_on:
      - postgres
      - rabbitmq
      - identitySvc

  bidSvc:
    container_name: Carsties.BiddingService
    image: trycatchlearn/bids-dvc:latest
    build: 
      context: .
      dockerfile: src/BiddingService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLs=http://+80
      - Logging__IncludeScopes=false
      - "Logging__LogOutputTemplate=[{Timestamp:dd-MM-yyyy HH:mm:ss, fff}] {Level} {Properties} [CorrelationId:{CorrelationId}] [Machine: {MachineName}] {CallerType}:{MemberName} {Message}{NewLine}{Exception}"
      - Logging__Console__Enabled=true
      - Logging__Console__LogLevel=Debug
      - Logging__Elastic__Enabled=true
      - Logging__Elastic__LogLevel=Debug
      - IdentityGroupAccess__Authority=http://identitySvc
      - IdentityGroupAccess__Audience=http://identitySvc/resources
      - AppConfigurations__ApplicationIdentifier=Carsties.BiddingService
      - AppConfigurations__ApplicationEnvironment=Docker
      - Elasticsearch__Uri=http://elasticsearch:9200
      - ConnectionStrings__MongoDbConnection=mongodb://root:Passw0rd@mongodb
      - RabbitMq__Host=rabbitmq
      - RabbitMq__Username=guest
      - RabbitMq__Password=guest
      - GrpcAuction=http://auctionSvc:7777
    ports:
      - 4004:80
    depends_on:
      - mongodb
      - rabbitmq

      
  searchSvc:
    container_name: Carsties.SearchService
    image: trycatchlearn/search-svc:latest
    build:
      context: .
      dockerfile: src/SearchService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLs=http://+80
      - Logging__IncludeScopes=false
      - "Logging__LogOutputTemplate=[{Timestamp:dd-MM-yyyy HH:mm:ss, fff}] {Level} {Properties} [CorrelationId:{CorrelationId}] [Machine: {MachineName}] {CallerType}:{MemberName} {Message}{NewLine}{Exception}"
      - Logging__Console__Enabled=true
      - Logging__Console__LogLevel=Debug
      - Logging__Elastic__Enabled=true
      - Logging__Elastic__LogLevel=Debug
      - AppConfigurations__ApplicationIdentifier=Carsties.SearchService
      - AppConfigurations__ApplicationEnvironment=Docker
      - Elasticsearch__Uri=http://elasticsearch:9200
      - ConnectionStrings__MongoDbConnection=mongodb://root:Passw0rd@mongodb
      - RabbitMq__Host=rabbitmq
      - RabbitMq__Username=guest
      - RabbitMq__Password=guest
    ports:
      - 4002:80
    depends_on:
      - mongodb
      - rabbitmq    

  identitySvc:
    container_name: Carsties.IdentityService
    image: trycatchlearn/identity-svc:latest
    build: 
      context: .
      dockerfile: src/IdentityService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLs=http://+80
      - Logging__IncludeScopes=false
      - "Logging__LogOutputTemplate=[{Timestamp:dd-MM-yyyy HH:mm:ss, fff}] {Level} {Properties} [CorrelationId:{CorrelationId}] [Machine: {MachineName}] {CallerType}:{MemberName} {Message}{NewLine}{Exception}{NewLine}"
      - Logging__Console__Enabled=true
      - Logging__Console__LogLevel=Debug
      - Logging__Elastic__Enabled=true
      - Logging__Elastic__LogLevel=Debug
      - AppConfigurations__ApplicationIdentifier=Carsties.IdentityService
      - AppConfigurations__ApplicationEnvironment=Docker
      - Elasticsearch__Uri=http://elasticsearch:9200
      - ConnectionStrings__DefaultConnection=Server=postgres:5432;Database=Identity;User Id=admin;Password=admin1234;
    ports:
      - 5000:80
    depends_on:
      - postgres


  gatewaySvc:
    container_name: Carsties.GatewayService
    image: trycatchlearn/gateway-svc:latest
    build: 
      context: .
      dockerfile: src/GatewayService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Docker
      - ASPNETCORE_URLs=http://+80
      - Logging__IncludeScopes=false
      - "Logging__LogOutputTemplate=[{Timestamp:dd-MM-yyyy HH:mm:ss, fff}] {Level} {Properties} [CorrelationId:{CorrelationId}] [Machine: {MachineName}] {CallerType}:{MemberName} {Message}{NewLine}{Exception}{NewLine}"
      - Logging__Console__Enabled=true
      - Logging__Console__LogLevel=Debug
      - Logging__Elastic__Enabled=true
      - Logging__Elastic__LogLevel=Debug
      - AppConfigurations__ApplicationIdentifier=Carsties.GatewayService
      - AppConfigurations__ApplicationEnvironment=Docker
      - Elasticsearch__Uri=http://elasticsearch:9200
    ports:
      - 4003:80

volumes:
  postgres_data:    
  pgadmin_data:    
  mongodata:
  portainer_data:
  elasticsearch-data: